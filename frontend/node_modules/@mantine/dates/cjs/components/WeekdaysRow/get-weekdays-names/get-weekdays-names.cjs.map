{"version":3,"file":"get-weekdays-names.cjs","sources":["../../../../src/components/WeekdaysRow/get-weekdays-names/get-weekdays-names.ts"],"sourcesContent":["import dayjs from 'dayjs';\nimport type { DateLabelFormat, DayOfWeek } from '../../../types';\n\ninterface GetWeekdaysNamesInput {\n  locale: string;\n  format?: DateLabelFormat;\n  firstDayOfWeek?: DayOfWeek;\n}\n\nexport function getWeekdayNames({\n  locale,\n  format = 'dd',\n  firstDayOfWeek = 1,\n}: GetWeekdaysNamesInput) {\n  const baseDate = dayjs().day(firstDayOfWeek);\n  const labels: Array<string | React.ReactNode> = [];\n\n  for (let i = 0; i < 7; i += 1) {\n    if (typeof format === 'string') {\n      labels.push(dayjs(baseDate).add(i, 'days').locale(locale).format(format));\n    } else {\n      labels.push(format(dayjs(baseDate).add(i, 'days').format('YYYY-MM-DD')));\n    }\n  }\n\n  return labels;\n}\n"],"names":["dayjs"],"mappings":";;;;;;;;;AASO,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAS,eAAA,CAAgB,CAAA;AAAA,CAAA,CAC9B,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAA,CAAA,CACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAS,CAAA,CAAA,CAAA,CAAA,CAAA;AAAA,CAAA,CACT,cAAA,CAAA,CAAA,CAAiB,CAAA;AACnB,CAAA,CAAA,CAA0B,CAAA;AACxB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAM,QAAA,CAAA,CAAA,CAAWA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAA,EAAM,CAAE,CAAA,CAAA,CAAA,CAAI,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAc,CAAA,CAAA;AAC3C,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAM,CAAA,CAAA,CAAA,CAAA,CAAA,IAA0C,CAAA,CAAC,CAAA;AAEjzE,CAAA;AAAA,CAAA,CACF,CAAA;AAEA,CAAA,CAAA,OAAO,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACT,CAAA;;"}